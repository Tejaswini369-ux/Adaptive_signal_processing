import React, { useState } from 'react';
import question1 from './question1.png';
import question3 from './question3.png';

const Quiz = () => {
  const questions = [
    {
      question: " Which of the following statements best describes the behaviour of the Mean Squared Error (MSE) in the learning curve for the LMS algorithm for AR process (from the figure)?",
      images: [question1],
      options: ["The MSE increases over time.", "The MSE remains constant over time.", " The MSE decreases rapidly initially and then stabilizes.", "The MSE fluctuates randomly with no clear trend."],
      answer: 2,
      explanation: "Correct answer is Option :- 3 i.e., The MSE decreases rapidly initially and then stabilizes."
    },
    {
      question: "What is the purpose of the phi variable in the simulation?",
      options: ["It represents the different angles for plotting the SNR pattern", "It determines the number of antennas", "It sets the number of Monte Carlo runs", "It defines the SNR values"],
      answer: 0,
      explanation: "Correct answer is Option :- 1 i.e., It represents the different angles for plotting the SNR pattern"
    },
    {
      question: "What does the plot generated by the MVDR function represent?",
      images: [question3],
      options: ["The array response for different angles", "The noise power distribution", "The average MVDR beamformer output in dB over various angles", "The signal-to-interference ratio"],
      answer: 2,
      explanation: "Correct answer is Option :- 3 i.e., The average MVDR beamformer output in dB over various angles"
    },
    {
      question: "The AR process is based on frequency domain analysis and it contains",
      options: ["only poles", "only zeros", "both poles and zeros", "unity transfer function"],
      answer: 0,
      explanation: "Correct answer is Option :- 1 i.e., only poles"
    },
    {
      question: "As the order of AR model is increased, the characteristic of mean square error",
      options: ["increases", "decreases", "remain constant", "first decreases and then increases"],
      answer: 1,
      explanation: "Correct answer is Option :- 2 i.e., decreases"
    }
  ];

  const [selectedOptions, setSelectedOptions] = useState(Array(questions.length).fill(null));
  const [showExplanations, setShowExplanations] = useState(false);

  const handleOptionSelect = (index, optionIndex) => {
    setSelectedOptions(prevOptions => {
      const updatedOptions = [...prevOptions];
      updatedOptions[index] = optionIndex;
      return updatedOptions;
    });
  };

  const handleSubmit = () => {
    setShowExplanations(true);
  };

  const score = selectedOptions.reduce((acc, optionIndex, index) => {
    if (optionIndex === questions[index].answer) {
      return acc + 1;
    }
    return acc;
  }, 0);

  return (
    <div className="postquiz font-sans text-sm">
      <ol>
        {questions.map((question, index) => (
          <li key={index} className="py-4">
            <h3 className='mb-2 font-semibold'>{`${index + 1}. ${question.question}`}</h3>
            {question.images && question.images.map((image, imgIndex) => (
              <img key={imgIndex} src={image} alt={`Illustration for question ${index + 1}`} className='mb-2' />
            ))}
            <ul className='space-y-2'>
              {question.options.map((option, optionIndex) => (
                <li key={optionIndex} >
                  <input
                    type="radio"
                    id={`option-${index}-${optionIndex}`}
                    name={`question-${index}`}
                    value={option}
                    checked={selectedOptions[index] === optionIndex}
                    onChange={() => handleOptionSelect(index, optionIndex)}
                  />
                  <label htmlFor={`option-${index}-${optionIndex}`}>{option}</label>
                </li>
              ))}
            </ul>
            {showExplanations && (
              <div className='mt-2 space-y-2'>
                <p className={selectedOptions[index] === question.answer ? 'text-green' : 'text-red-500'}>
                  {selectedOptions[index] === question.answer ? 'Correct' : 'Incorrect'}
                </p>
                <p className='text-blue-500'>Explanation: {question.explanation}</p>
              </div>
            )}
          </li>
        ))}
      </ol>
      <button onClick={handleSubmit} className=' mt-5 bg-blue-button hover:bg-blue-hover rounded-lg px-2 py-1 w-1/5'>Submit</button>
      {showExplanations && (
        <div className='mt-2'>
          <p className='font-bold'>Your Score: {score}/{questions.length}</p>
        </div>
      )}
    </div>
  );
};

export default Quiz;
